SUBDESIGN display
(
a[3..0], b[3..0], c[3..0], d[3..0]	: INPUT;
seletor, sw1 								: INPUT; 
clock											: INPUT;
out[0..7]									: OUTPUT;
dig[3..0]									: OUTPUT;
)

VARIABLE
	ff[24..0] 	: DFF;
	ffaux[1..0]	: DFF;
	aux[1..0]	: NODE; 
	q[24..0] 	: NODE;
	disp[3..0]  : NODE;

BEGIN
	ff[].clk = clock;
	ffaux[].clk = clock;
	q[] = ff[].q;
	aux[] = ffaux[].q;
	CASE q[] IS        %criando contador interno para alternar entre os digitos do display%
		WHEN 50000 => 
			if ffaux[].q == 3 then
				ffaux[].d = 0;
			else
				ffaux[].d = ffaux[].q + 1;
			end if;
			ff[].d = 0;
		WHEN OTHERS =>
			ff[].d = q[] + 1;
			ffaux[].d = ffaux[].q;
			
	END CASE;

	CASE aux[] IS 							%alterna os digitos de display a partir de aux %
		WHEN B"00" =>  dig[0] = GND;
							disp[] = a[];
							dig[1] = VCC;
							dig[2] = VCC;
							dig[3] = VCC;
		WHEN B"01" =>	dig[1] = GND;
							disp[] = b[];
							dig[0] = VCC;
							dig[2] = VCC;
							dig[3] = VCC;
		WHEN B"10" =>	dig[2] = GND;
							disp[] = c[];
							dig[0] = VCC;
							dig[1] = VCC;
							dig[3] = VCC;
		WHEN B"11" =>	dig[3] = GND;
							disp[] = d[];
							dig[0] = VCC;
							dig[1] = VCC;
							dig[2] = VCC;
		%WHEN B"00" => 	dig[0] = GND;
							disp[] = a[]; 
		WHEN B"01" =>	dig[1] = GND;
							disp[] = b[];
		WHEN B"10" =>	dig[2] = GND;
							disp[] = c[];
		WHEN B"11" =>	dig[3] = GND;
							disp[] = d[];%
	END CASE;
	
	if sw1 == VCC then
		TABLE
		disp[] => out[];
		H"0" => B"00000011";--0,0,0,0,0,0,1;
		H"1" => B"10011111";--1,0,0,1,1,1,1;
		H"2" => B"00100101";--0,0,1,0,0,1,0;
		H"3" => B"00001101";--0,0,0,0,1,1,0;
		H"4" => B"10011001";--1,0,0,1,1,0,0;
		H"5" => B"01001001";--0,1,0,0,1,0,0;
		H"6" => B"01000001";--0,1,0,0,0,0,0;
		H"7" => B"00011111";--0,0,0,1,1,1,1;
		H"8" => B"00000001";--0,0,0,0,0,0,0;
		H"9" => B"00001001";--0,0,0,0,1,0,0;
		H"A" => B"00010001";--0,0,0,1,0,0,0;
		H"B" => B"11111001";--1,1,0,0,0,0,0;
		H"C" => B"01110011";--0,1,1,0,0,0,1;
		H"D" => B"10111101";--1,0,0,0,0,1,0;
		H"E" => B"11110011";--0,1,1,0,0,0,0;
		H"F" => B"11100011";--0,1,1,1,0,0,0;
		END TABLE;
	else  -- caso fm
		if aux[] == B"01" then     -- 2 digito (unidade) do fm, usa o .
			TABLE
				disp[] => out[];
				H"0" => B"00000010";--0,0,0,0,0,0,1;
				H"1" => B"10011110";--1,0,0,1,1,1,1;
				H"2" => B"00100100";--0,0,1,0,0,1,0;
				H"3" => B"00001100";--0,0,0,0,1,1,0;
				H"4" => B"10011000";--1,0,0,1,1,0,0;
				H"5" => B"01001000";--0,1,0,0,1,0,0;
				H"6" => B"01000000";--0,1,0,0,0,0,0;
				H"7" => B"00011110";--0,0,0,1,1,1,1;
				H"8" => B"00000000";--0,0,0,0,0,0,0;
				H"9" => B"00001000";--0,0,0,0,1,0,0;
				H"A" => B"00010000";--0,0,0,1,0,0,0;
				H"B" => B"11111000";--1,1,0,0,0,0,0;
				H"C" => B"01110010";--0,1,1,0,0,0,1;
				H"D" => B"10111100";--1,0,0,0,0,1,0;
				H"E" => B"11110010";--0,1,1,0,0,0,0;
				H"F" => B"11100010";--0,1,1,1,0,0,0;
			END TABLE;
		else
			TABLE
				disp[] => out[];
				H"0" => B"00000011";--0,0,0,0,0,0,1;
				H"1" => B"10011111";--1,0,0,1,1,1,1;
				H"2" => B"00100101";--0,0,1,0,0,1,0;
				H"3" => B"00001101";--0,0,0,0,1,1,0;
				H"4" => B"10011001";--1,0,0,1,1,0,0;
				H"5" => B"01001001";--0,1,0,0,1,0,0;
				H"6" => B"01000001";--0,1,0,0,0,0,0;
				H"7" => B"00011111";--0,0,0,1,1,1,1;
				H"8" => B"00000001";--0,0,0,0,0,0,0;
				H"9" => B"00001001";--0,0,0,0,1,0,0;
				H"A" => B"00010001";--0,0,0,1,0,0,0;
				H"B" => B"11111001";--1,1,0,0,0,0,0;
				H"C" => B"01110011";--0,1,1,0,0,0,1;
				H"D" => B"10111101";--1,0,0,0,0,1,0;
				H"E" => B"11110011";--0,1,1,0,0,0,0;
				H"F" => B"11100011";--0,1,1,1,0,0,0;
			END TABLE;
		end if;
	end if;
END;